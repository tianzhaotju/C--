State 110 conflicts: 6 shift/reduce
State 111 conflicts: 6 shift/reduce
State 112 conflicts: 6 shift/reduce
State 113 conflicts: 6 shift/reduce
State 114 conflicts: 6 shift/reduce
State 115 conflicts: 6 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ExtDefList

    2 ExtDefList: ExtDef ExtDefList
    3           | %empty

    4 ExtDef: TYPE ID SEMI
    5       | TYPE SEMI
    6       | TYPE FunDec CompSt
    7       | VOID FunDec CompSt
    8       | FLOAT MAIN LP RP
    9       | TYPE MAIN LP TYPE ID RP
   10       | VOID MAIN LP RP
   11       | VOID MAIN LP TYPE ID RP

   12 FunDec: ID LP TYPE ID RP
   13       | ID LP RP

   14 CompSt: LC DefList StmtList RC

   15 StmtList: Stmt StmtList
   16         | %empty

   17 Exp_Stmt: SEMI
   18         | Exp SEMI

   19 Stmt: Exp SEMI
   20     | CompSt
   21     | RETURN Exp SEMI
   22     | IF LP Exp RP Stmt
   23     | IF LP Exp RP Stmt ELSE Stmt
   24     | WHILE LP Exp RP Stmt
   25     | FOR LP Exp_Stmt Exp_Stmt RP Stmt
   26     | FOR LP Exp_Stmt Exp_Stmt Exp RP Stmt
   27     | CONTINUE SEMI
   28     | BREAK SEMI
   29     | RETURN SEMI

   30 DefList: Def DefList
   31        | %empty

   32 Def: TYPE Dec SEMI

   33 Dec: ID
   34    | ID ASSIGNOP Exp

   35 Exp: Exp ASSIGNOP Exp
   36    | Exp RELOP Exp
   37    | Exp PLUS Exp
   38    | Exp MINUS Exp
   39    | Exp STAR Exp
   40    | Exp DIV Exp
   41    | LP Exp RP
   42    | MINUS Exp
   43    | ID LP Exp RP
   44    | ID LP RP
   45    | ID
   46    | INT
   47    | FLOAT
   48    | SCENTIFIC_NUMBER
   49    | OCTAL
   50    | HEXA
   51    | BINARY

   52 INT: T_IntConstant

   53 SCENTIFIC_NUMBER: T_ScientificConstant

   54 OCTAL: T_OctalConstant

   55 HEXA: T_HexaConstant

   56 BINARY: T_BinaryConstant

   57 FLOAT: T_FloatConstant

   58 ID: T_Identifier

   59 SEMI: T_Semi

   60 ASSIGNOP: T_Assignop

   61 RELOP: T_Relop

   62 PLUS: T_Plus

   63 MINUS: T_Minus

   64 STAR: T_Star

   65 DIV: T_Div

   66 TYPE: T_Type

   67 LP: T_Lp

   68 RP: T_Rp

   69 LC: T_Lc

   70 RC: T_Rc

   71 RETURN: T_Return

   72 IF: T_If

   73 ELSE: T_Else

   74 WHILE: T_While

   75 FOR: T_For

   76 VOID: T_Void

   77 BREAK: T_Break

   78 CONTINUE: T_Continue

   79 MAIN: T_Main


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IntConstant (258) 52
T_FloatConstant (259) 57
T_ScientificConstant (260) 53
T_OctalConstant (261) 54
T_HexaConstant (262) 55
T_BinaryConstant (263) 56
T_Identifier (264) 58
T_Semi (265) 59
T_Assignop (266) 60
T_Relop (267) 61
T_Plus (268) 62
T_Minus (269) 63
T_Star (270) 64
T_Div (271) 65
T_Type (272) 66
T_Lp (273) 67
T_Rp (274) 68
T_Lc (275) 69
T_Rc (276) 70
T_Return (277) 71
T_If (278) 72
T_Else (279) 73
T_While (280) 74
T_For (281) 75
T_Void (282) 76
T_Break (283) 77
T_Continue (284) 78
T_Main (285) 79
UMINUS (286)
IFX (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
Program (34)
    on left: 1, on right: 0
ExtDefList (35)
    on left: 2 3, on right: 1 2
ExtDef (36)
    on left: 4 5 6 7 8 9 10 11, on right: 2
FunDec (37)
    on left: 12 13, on right: 6 7
CompSt (38)
    on left: 14, on right: 6 7 20
StmtList (39)
    on left: 15 16, on right: 14 15
Exp_Stmt (40)
    on left: 17 18, on right: 25 26
Stmt (41)
    on left: 19 20 21 22 23 24 25 26 27 28 29, on right: 15 22 23 24
    25 26
DefList (42)
    on left: 30 31, on right: 14 30
Def (43)
    on left: 32, on right: 30
Dec (44)
    on left: 33 34, on right: 32
Exp (45)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51, on right:
    18 19 21 22 23 24 26 34 35 36 37 38 39 40 41 42 43
INT (46)
    on left: 52, on right: 46
SCENTIFIC_NUMBER (47)
    on left: 53, on right: 48
OCTAL (48)
    on left: 54, on right: 49
HEXA (49)
    on left: 55, on right: 50
BINARY (50)
    on left: 56, on right: 51
FLOAT (51)
    on left: 57, on right: 8 47
ID (52)
    on left: 58, on right: 4 9 11 12 13 33 34 43 44 45
SEMI (53)
    on left: 59, on right: 4 5 17 18 19 21 27 28 29 32
ASSIGNOP (54)
    on left: 60, on right: 34 35
RELOP (55)
    on left: 61, on right: 36
PLUS (56)
    on left: 62, on right: 37
MINUS (57)
    on left: 63, on right: 38 42
STAR (58)
    on left: 64, on right: 39
DIV (59)
    on left: 65, on right: 40
TYPE (60)
    on left: 66, on right: 4 5 6 9 11 12 32
LP (61)
    on left: 67, on right: 8 9 10 11 12 13 22 23 24 25 26 41 43 44
RP (62)
    on left: 68, on right: 8 9 10 11 12 13 22 23 24 25 26 41 43 44
LC (63)
    on left: 69, on right: 14
RC (64)
    on left: 70, on right: 14
RETURN (65)
    on left: 71, on right: 21 29
IF (66)
    on left: 72, on right: 22 23
ELSE (67)
    on left: 73, on right: 23
WHILE (68)
    on left: 74, on right: 24
FOR (69)
    on left: 75, on right: 25 26
VOID (70)
    on left: 76, on right: 7 10 11
BREAK (71)
    on left: 77, on right: 28
CONTINUE (72)
    on left: 78, on right: 27
MAIN (73)
    on left: 79, on right: 8 9 10 11


State 0

    0 $accept: . Program $end

    T_FloatConstant  shift, and go to state 1
    T_Type           shift, and go to state 2
    T_Void           shift, and go to state 3

    $default  reduce using rule 3 (ExtDefList)

    Program     go to state 4
    ExtDefList  go to state 5
    ExtDef      go to state 6
    FLOAT       go to state 7
    TYPE        go to state 8
    VOID        go to state 9


State 1

   57 FLOAT: T_FloatConstant .

    $default  reduce using rule 57 (FLOAT)


State 2

   66 TYPE: T_Type .

    $default  reduce using rule 66 (TYPE)


State 3

   76 VOID: T_Void .

    $default  reduce using rule 76 (VOID)


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 10


State 5

    1 Program: ExtDefList .

    $default  reduce using rule 1 (Program)


State 6

    2 ExtDefList: ExtDef . ExtDefList

    T_FloatConstant  shift, and go to state 1
    T_Type           shift, and go to state 2
    T_Void           shift, and go to state 3

    $default  reduce using rule 3 (ExtDefList)

    ExtDefList  go to state 11
    ExtDef      go to state 6
    FLOAT       go to state 7
    TYPE        go to state 8
    VOID        go to state 9


State 7

    8 ExtDef: FLOAT . MAIN LP RP

    T_Main  shift, and go to state 12

    MAIN  go to state 13


State 8

    4 ExtDef: TYPE . ID SEMI
    5       | TYPE . SEMI
    6       | TYPE . FunDec CompSt
    9       | TYPE . MAIN LP TYPE ID RP

    T_Identifier  shift, and go to state 14
    T_Semi        shift, and go to state 15
    T_Main        shift, and go to state 12

    FunDec  go to state 16
    ID      go to state 17
    SEMI    go to state 18
    MAIN    go to state 19


State 9

    7 ExtDef: VOID . FunDec CompSt
   10       | VOID . MAIN LP RP
   11       | VOID . MAIN LP TYPE ID RP

    T_Identifier  shift, and go to state 14
    T_Main        shift, and go to state 12

    FunDec  go to state 20
    ID      go to state 21
    MAIN    go to state 22


State 10

    0 $accept: Program $end .

    $default  accept


State 11

    2 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 2 (ExtDefList)


State 12

   79 MAIN: T_Main .

    $default  reduce using rule 79 (MAIN)


State 13

    8 ExtDef: FLOAT MAIN . LP RP

    T_Lp  shift, and go to state 23

    LP  go to state 24


State 14

   58 ID: T_Identifier .

    $default  reduce using rule 58 (ID)


State 15

   59 SEMI: T_Semi .

    $default  reduce using rule 59 (SEMI)


State 16

    6 ExtDef: TYPE FunDec . CompSt

    T_Lc  shift, and go to state 25

    CompSt  go to state 26
    LC      go to state 27


State 17

    4 ExtDef: TYPE ID . SEMI
   12 FunDec: ID . LP TYPE ID RP
   13       | ID . LP RP

    T_Semi  shift, and go to state 15
    T_Lp    shift, and go to state 23

    SEMI  go to state 28
    LP    go to state 29


State 18

    5 ExtDef: TYPE SEMI .

    $default  reduce using rule 5 (ExtDef)


State 19

    9 ExtDef: TYPE MAIN . LP TYPE ID RP

    T_Lp  shift, and go to state 23

    LP  go to state 30


State 20

    7 ExtDef: VOID FunDec . CompSt

    T_Lc  shift, and go to state 25

    CompSt  go to state 31
    LC      go to state 27


State 21

   12 FunDec: ID . LP TYPE ID RP
   13       | ID . LP RP

    T_Lp  shift, and go to state 23

    LP  go to state 29


State 22

   10 ExtDef: VOID MAIN . LP RP
   11       | VOID MAIN . LP TYPE ID RP

    T_Lp  shift, and go to state 23

    LP  go to state 32


State 23

   67 LP: T_Lp .

    $default  reduce using rule 67 (LP)


State 24

    8 ExtDef: FLOAT MAIN LP . RP

    T_Rp  shift, and go to state 33

    RP  go to state 34


State 25

   69 LC: T_Lc .

    $default  reduce using rule 69 (LC)


State 26

    6 ExtDef: TYPE FunDec CompSt .

    $default  reduce using rule 6 (ExtDef)


State 27

   14 CompSt: LC . DefList StmtList RC

    T_Type  shift, and go to state 2

    $default  reduce using rule 31 (DefList)

    DefList  go to state 35
    Def      go to state 36
    TYPE     go to state 37


State 28

    4 ExtDef: TYPE ID SEMI .

    $default  reduce using rule 4 (ExtDef)


State 29

   12 FunDec: ID LP . TYPE ID RP
   13       | ID LP . RP

    T_Type  shift, and go to state 2
    T_Rp    shift, and go to state 33

    TYPE  go to state 38
    RP    go to state 39


State 30

    9 ExtDef: TYPE MAIN LP . TYPE ID RP

    T_Type  shift, and go to state 2

    TYPE  go to state 40


State 31

    7 ExtDef: VOID FunDec CompSt .

    $default  reduce using rule 7 (ExtDef)


State 32

   10 ExtDef: VOID MAIN LP . RP
   11       | VOID MAIN LP . TYPE ID RP

    T_Type  shift, and go to state 2
    T_Rp    shift, and go to state 33

    TYPE  go to state 41
    RP    go to state 42


State 33

   68 RP: T_Rp .

    $default  reduce using rule 68 (RP)


State 34

    8 ExtDef: FLOAT MAIN LP RP .

    $default  reduce using rule 8 (ExtDef)


State 35

   14 CompSt: LC DefList . StmtList RC

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23
    T_Lc                  shift, and go to state 25
    T_Return              shift, and go to state 49
    T_If                  shift, and go to state 50
    T_While               shift, and go to state 51
    T_For                 shift, and go to state 52
    T_Break               shift, and go to state 53
    T_Continue            shift, and go to state 54

    $default  reduce using rule 16 (StmtList)

    CompSt            go to state 55
    StmtList          go to state 56
    Stmt              go to state 57
    Exp               go to state 58
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67
    LC                go to state 27
    RETURN            go to state 68
    IF                go to state 69
    WHILE             go to state 70
    FOR               go to state 71
    BREAK             go to state 72
    CONTINUE          go to state 73


State 36

   30 DefList: Def . DefList

    T_Type  shift, and go to state 2

    $default  reduce using rule 31 (DefList)

    DefList  go to state 74
    Def      go to state 36
    TYPE     go to state 37


State 37

   32 Def: TYPE . Dec SEMI

    T_Identifier  shift, and go to state 14

    Dec  go to state 75
    ID   go to state 76


State 38

   12 FunDec: ID LP TYPE . ID RP

    T_Identifier  shift, and go to state 14

    ID  go to state 77


State 39

   13 FunDec: ID LP RP .

    $default  reduce using rule 13 (FunDec)


State 40

    9 ExtDef: TYPE MAIN LP TYPE . ID RP

    T_Identifier  shift, and go to state 14

    ID  go to state 78


State 41

   11 ExtDef: VOID MAIN LP TYPE . ID RP

    T_Identifier  shift, and go to state 14

    ID  go to state 79


State 42

   10 ExtDef: VOID MAIN LP RP .

    $default  reduce using rule 10 (ExtDef)


State 43

   52 INT: T_IntConstant .

    $default  reduce using rule 52 (INT)


State 44

   53 SCENTIFIC_NUMBER: T_ScientificConstant .

    $default  reduce using rule 53 (SCENTIFIC_NUMBER)


State 45

   54 OCTAL: T_OctalConstant .

    $default  reduce using rule 54 (OCTAL)


State 46

   55 HEXA: T_HexaConstant .

    $default  reduce using rule 55 (HEXA)


State 47

   56 BINARY: T_BinaryConstant .

    $default  reduce using rule 56 (BINARY)


State 48

   63 MINUS: T_Minus .

    $default  reduce using rule 63 (MINUS)


State 49

   71 RETURN: T_Return .

    $default  reduce using rule 71 (RETURN)


State 50

   72 IF: T_If .

    $default  reduce using rule 72 (IF)


State 51

   74 WHILE: T_While .

    $default  reduce using rule 74 (WHILE)


State 52

   75 FOR: T_For .

    $default  reduce using rule 75 (FOR)


State 53

   77 BREAK: T_Break .

    $default  reduce using rule 77 (BREAK)


State 54

   78 CONTINUE: T_Continue .

    $default  reduce using rule 78 (CONTINUE)


State 55

   20 Stmt: CompSt .

    $default  reduce using rule 20 (Stmt)


State 56

   14 CompSt: LC DefList StmtList . RC

    T_Rc  shift, and go to state 80

    RC  go to state 81


State 57

   15 StmtList: Stmt . StmtList

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23
    T_Lc                  shift, and go to state 25
    T_Return              shift, and go to state 49
    T_If                  shift, and go to state 50
    T_While               shift, and go to state 51
    T_For                 shift, and go to state 52
    T_Break               shift, and go to state 53
    T_Continue            shift, and go to state 54

    $default  reduce using rule 16 (StmtList)

    CompSt            go to state 55
    StmtList          go to state 82
    Stmt              go to state 57
    Exp               go to state 58
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67
    LC                go to state 27
    RETURN            go to state 68
    IF                go to state 69
    WHILE             go to state 70
    FOR               go to state 71
    BREAK             go to state 72
    CONTINUE          go to state 73


State 58

   19 Stmt: Exp . SEMI
   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Semi      shift, and go to state 15
    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    SEMI      go to state 88
    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 59

   46 Exp: INT .

    $default  reduce using rule 46 (Exp)


State 60

   48 Exp: SCENTIFIC_NUMBER .

    $default  reduce using rule 48 (Exp)


State 61

   49 Exp: OCTAL .

    $default  reduce using rule 49 (Exp)


State 62

   50 Exp: HEXA .

    $default  reduce using rule 50 (Exp)


State 63

   51 Exp: BINARY .

    $default  reduce using rule 51 (Exp)


State 64

   47 Exp: FLOAT .

    $default  reduce using rule 47 (Exp)


State 65

   43 Exp: ID . LP Exp RP
   44    | ID . LP RP
   45    | ID .

    T_Lp  shift, and go to state 23

    $default  reduce using rule 45 (Exp)

    LP  go to state 95


State 66

   42 Exp: MINUS . Exp

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 96
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 67

   41 Exp: LP . Exp RP

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 97
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 68

   21 Stmt: RETURN . Exp SEMI
   29     | RETURN . SEMI

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Semi                shift, and go to state 15
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 98
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    SEMI              go to state 99
    MINUS             go to state 66
    LP                go to state 67


State 69

   22 Stmt: IF . LP Exp RP Stmt
   23     | IF . LP Exp RP Stmt ELSE Stmt

    T_Lp  shift, and go to state 23

    LP  go to state 100


State 70

   24 Stmt: WHILE . LP Exp RP Stmt

    T_Lp  shift, and go to state 23

    LP  go to state 101


State 71

   25 Stmt: FOR . LP Exp_Stmt Exp_Stmt RP Stmt
   26     | FOR . LP Exp_Stmt Exp_Stmt Exp RP Stmt

    T_Lp  shift, and go to state 23

    LP  go to state 102


State 72

   28 Stmt: BREAK . SEMI

    T_Semi  shift, and go to state 15

    SEMI  go to state 103


State 73

   27 Stmt: CONTINUE . SEMI

    T_Semi  shift, and go to state 15

    SEMI  go to state 104


State 74

   30 DefList: Def DefList .

    $default  reduce using rule 30 (DefList)


State 75

   32 Def: TYPE Dec . SEMI

    T_Semi  shift, and go to state 15

    SEMI  go to state 105


State 76

   33 Dec: ID .
   34    | ID . ASSIGNOP Exp

    T_Assignop  shift, and go to state 83

    $default  reduce using rule 33 (Dec)

    ASSIGNOP  go to state 106


State 77

   12 FunDec: ID LP TYPE ID . RP

    T_Rp  shift, and go to state 33

    RP  go to state 107


State 78

    9 ExtDef: TYPE MAIN LP TYPE ID . RP

    T_Rp  shift, and go to state 33

    RP  go to state 108


State 79

   11 ExtDef: VOID MAIN LP TYPE ID . RP

    T_Rp  shift, and go to state 33

    RP  go to state 109


State 80

   70 RC: T_Rc .

    $default  reduce using rule 70 (RC)


State 81

   14 CompSt: LC DefList StmtList RC .

    $default  reduce using rule 14 (CompSt)


State 82

   15 StmtList: Stmt StmtList .

    $default  reduce using rule 15 (StmtList)


State 83

   60 ASSIGNOP: T_Assignop .

    $default  reduce using rule 60 (ASSIGNOP)


State 84

   61 RELOP: T_Relop .

    $default  reduce using rule 61 (RELOP)


State 85

   62 PLUS: T_Plus .

    $default  reduce using rule 62 (PLUS)


State 86

   64 STAR: T_Star .

    $default  reduce using rule 64 (STAR)


State 87

   65 DIV: T_Div .

    $default  reduce using rule 65 (DIV)


State 88

   19 Stmt: Exp SEMI .

    $default  reduce using rule 19 (Stmt)


State 89

   35 Exp: Exp ASSIGNOP . Exp

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 110
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 90

   36 Exp: Exp RELOP . Exp

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 111
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 91

   37 Exp: Exp PLUS . Exp

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 112
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 92

   38 Exp: Exp MINUS . Exp

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 113
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 93

   39 Exp: Exp STAR . Exp

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 114
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 94

   40 Exp: Exp DIV . Exp

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 115
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 95

   43 Exp: ID LP . Exp RP
   44    | ID LP . RP

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23
    T_Rp                  shift, and go to state 33

    Exp               go to state 116
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67
    RP                go to state 117


State 96

   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp
   42    | MINUS Exp .

    $default  reduce using rule 42 (Exp)

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 97

   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp
   41    | LP Exp . RP

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87
    T_Rp        shift, and go to state 33

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94
    RP        go to state 118


State 98

   21 Stmt: RETURN Exp . SEMI
   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Semi      shift, and go to state 15
    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    SEMI      go to state 119
    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 99

   29 Stmt: RETURN SEMI .

    $default  reduce using rule 29 (Stmt)


State 100

   22 Stmt: IF LP . Exp RP Stmt
   23     | IF LP . Exp RP Stmt ELSE Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 120
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 101

   24 Stmt: WHILE LP . Exp RP Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 121
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 102

   25 Stmt: FOR LP . Exp_Stmt Exp_Stmt RP Stmt
   26     | FOR LP . Exp_Stmt Exp_Stmt Exp RP Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Semi                shift, and go to state 15
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp_Stmt          go to state 122
    Exp               go to state 123
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    SEMI              go to state 124
    MINUS             go to state 66
    LP                go to state 67


State 103

   28 Stmt: BREAK SEMI .

    $default  reduce using rule 28 (Stmt)


State 104

   27 Stmt: CONTINUE SEMI .

    $default  reduce using rule 27 (Stmt)


State 105

   32 Def: TYPE Dec SEMI .

    $default  reduce using rule 32 (Def)


State 106

   34 Dec: ID ASSIGNOP . Exp

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp               go to state 125
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67


State 107

   12 FunDec: ID LP TYPE ID RP .

    $default  reduce using rule 12 (FunDec)


State 108

    9 ExtDef: TYPE MAIN LP TYPE ID RP .

    $default  reduce using rule 9 (ExtDef)


State 109

   11 ExtDef: VOID MAIN LP TYPE ID RP .

    $default  reduce using rule 11 (ExtDef)


State 110

   35 Exp: Exp . ASSIGNOP Exp
   35    | Exp ASSIGNOP Exp .
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    T_Assignop  [reduce using rule 35 (Exp)]
    T_Relop     [reduce using rule 35 (Exp)]
    T_Plus      [reduce using rule 35 (Exp)]
    T_Minus     [reduce using rule 35 (Exp)]
    T_Star      [reduce using rule 35 (Exp)]
    T_Div       [reduce using rule 35 (Exp)]
    $default    reduce using rule 35 (Exp)

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 111

   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   36    | Exp RELOP Exp .
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    T_Assignop  [reduce using rule 36 (Exp)]
    T_Relop     [reduce using rule 36 (Exp)]
    T_Plus      [reduce using rule 36 (Exp)]
    T_Minus     [reduce using rule 36 (Exp)]
    T_Star      [reduce using rule 36 (Exp)]
    T_Div       [reduce using rule 36 (Exp)]
    $default    reduce using rule 36 (Exp)

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 112

   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   37    | Exp PLUS Exp .
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    T_Assignop  [reduce using rule 37 (Exp)]
    T_Relop     [reduce using rule 37 (Exp)]
    T_Plus      [reduce using rule 37 (Exp)]
    T_Minus     [reduce using rule 37 (Exp)]
    T_Star      [reduce using rule 37 (Exp)]
    T_Div       [reduce using rule 37 (Exp)]
    $default    reduce using rule 37 (Exp)

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 113

   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   38    | Exp MINUS Exp .
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    T_Assignop  [reduce using rule 38 (Exp)]
    T_Relop     [reduce using rule 38 (Exp)]
    T_Plus      [reduce using rule 38 (Exp)]
    T_Minus     [reduce using rule 38 (Exp)]
    T_Star      [reduce using rule 38 (Exp)]
    T_Div       [reduce using rule 38 (Exp)]
    $default    reduce using rule 38 (Exp)

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 114

   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   39    | Exp STAR Exp .
   40    | Exp . DIV Exp

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    T_Assignop  [reduce using rule 39 (Exp)]
    T_Relop     [reduce using rule 39 (Exp)]
    T_Plus      [reduce using rule 39 (Exp)]
    T_Minus     [reduce using rule 39 (Exp)]
    T_Star      [reduce using rule 39 (Exp)]
    T_Div       [reduce using rule 39 (Exp)]
    $default    reduce using rule 39 (Exp)

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 115

   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp
   40    | Exp DIV Exp .

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    T_Assignop  [reduce using rule 40 (Exp)]
    T_Relop     [reduce using rule 40 (Exp)]
    T_Plus      [reduce using rule 40 (Exp)]
    T_Minus     [reduce using rule 40 (Exp)]
    T_Star      [reduce using rule 40 (Exp)]
    T_Div       [reduce using rule 40 (Exp)]
    $default    reduce using rule 40 (Exp)

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 116

   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp
   43    | ID LP Exp . RP

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87
    T_Rp        shift, and go to state 33

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94
    RP        go to state 126


State 117

   44 Exp: ID LP RP .

    $default  reduce using rule 44 (Exp)


State 118

   41 Exp: LP Exp RP .

    $default  reduce using rule 41 (Exp)


State 119

   21 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 21 (Stmt)


State 120

   22 Stmt: IF LP Exp . RP Stmt
   23     | IF LP Exp . RP Stmt ELSE Stmt
   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87
    T_Rp        shift, and go to state 33

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94
    RP        go to state 127


State 121

   24 Stmt: WHILE LP Exp . RP Stmt
   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87
    T_Rp        shift, and go to state 33

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94
    RP        go to state 128


State 122

   25 Stmt: FOR LP Exp_Stmt . Exp_Stmt RP Stmt
   26     | FOR LP Exp_Stmt . Exp_Stmt Exp RP Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Semi                shift, and go to state 15
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23

    Exp_Stmt          go to state 129
    Exp               go to state 123
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    SEMI              go to state 124
    MINUS             go to state 66
    LP                go to state 67


State 123

   18 Exp_Stmt: Exp . SEMI
   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Semi      shift, and go to state 15
    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    SEMI      go to state 130
    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 124

   17 Exp_Stmt: SEMI .

    $default  reduce using rule 17 (Exp_Stmt)


State 125

   34 Dec: ID ASSIGNOP Exp .
   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87

    $default  reduce using rule 34 (Dec)

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94


State 126

   43 Exp: ID LP Exp RP .

    $default  reduce using rule 43 (Exp)


State 127

   22 Stmt: IF LP Exp RP . Stmt
   23     | IF LP Exp RP . Stmt ELSE Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23
    T_Lc                  shift, and go to state 25
    T_Return              shift, and go to state 49
    T_If                  shift, and go to state 50
    T_While               shift, and go to state 51
    T_For                 shift, and go to state 52
    T_Break               shift, and go to state 53
    T_Continue            shift, and go to state 54

    CompSt            go to state 55
    Stmt              go to state 131
    Exp               go to state 58
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67
    LC                go to state 27
    RETURN            go to state 68
    IF                go to state 69
    WHILE             go to state 70
    FOR               go to state 71
    BREAK             go to state 72
    CONTINUE          go to state 73


State 128

   24 Stmt: WHILE LP Exp RP . Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23
    T_Lc                  shift, and go to state 25
    T_Return              shift, and go to state 49
    T_If                  shift, and go to state 50
    T_While               shift, and go to state 51
    T_For                 shift, and go to state 52
    T_Break               shift, and go to state 53
    T_Continue            shift, and go to state 54

    CompSt            go to state 55
    Stmt              go to state 132
    Exp               go to state 58
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67
    LC                go to state 27
    RETURN            go to state 68
    IF                go to state 69
    WHILE             go to state 70
    FOR               go to state 71
    BREAK             go to state 72
    CONTINUE          go to state 73


State 129

   25 Stmt: FOR LP Exp_Stmt Exp_Stmt . RP Stmt
   26     | FOR LP Exp_Stmt Exp_Stmt . Exp RP Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23
    T_Rp                  shift, and go to state 33

    Exp               go to state 133
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67
    RP                go to state 134


State 130

   18 Exp_Stmt: Exp SEMI .

    $default  reduce using rule 18 (Exp_Stmt)


State 131

   22 Stmt: IF LP Exp RP Stmt .
   23     | IF LP Exp RP Stmt . ELSE Stmt

    T_Else  shift, and go to state 135

    $default  reduce using rule 22 (Stmt)

    ELSE  go to state 136


State 132

   24 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 24 (Stmt)


State 133

   26 Stmt: FOR LP Exp_Stmt Exp_Stmt Exp . RP Stmt
   35 Exp: Exp . ASSIGNOP Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . STAR Exp
   40    | Exp . DIV Exp

    T_Assignop  shift, and go to state 83
    T_Relop     shift, and go to state 84
    T_Plus      shift, and go to state 85
    T_Minus     shift, and go to state 48
    T_Star      shift, and go to state 86
    T_Div       shift, and go to state 87
    T_Rp        shift, and go to state 33

    ASSIGNOP  go to state 89
    RELOP     go to state 90
    PLUS      go to state 91
    MINUS     go to state 92
    STAR      go to state 93
    DIV       go to state 94
    RP        go to state 137


State 134

   25 Stmt: FOR LP Exp_Stmt Exp_Stmt RP . Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23
    T_Lc                  shift, and go to state 25
    T_Return              shift, and go to state 49
    T_If                  shift, and go to state 50
    T_While               shift, and go to state 51
    T_For                 shift, and go to state 52
    T_Break               shift, and go to state 53
    T_Continue            shift, and go to state 54

    CompSt            go to state 55
    Stmt              go to state 138
    Exp               go to state 58
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67
    LC                go to state 27
    RETURN            go to state 68
    IF                go to state 69
    WHILE             go to state 70
    FOR               go to state 71
    BREAK             go to state 72
    CONTINUE          go to state 73


State 135

   73 ELSE: T_Else .

    $default  reduce using rule 73 (ELSE)


State 136

   23 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23
    T_Lc                  shift, and go to state 25
    T_Return              shift, and go to state 49
    T_If                  shift, and go to state 50
    T_While               shift, and go to state 51
    T_For                 shift, and go to state 52
    T_Break               shift, and go to state 53
    T_Continue            shift, and go to state 54

    CompSt            go to state 55
    Stmt              go to state 139
    Exp               go to state 58
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67
    LC                go to state 27
    RETURN            go to state 68
    IF                go to state 69
    WHILE             go to state 70
    FOR               go to state 71
    BREAK             go to state 72
    CONTINUE          go to state 73


State 137

   26 Stmt: FOR LP Exp_Stmt Exp_Stmt Exp RP . Stmt

    T_IntConstant         shift, and go to state 43
    T_FloatConstant       shift, and go to state 1
    T_ScientificConstant  shift, and go to state 44
    T_OctalConstant       shift, and go to state 45
    T_HexaConstant        shift, and go to state 46
    T_BinaryConstant      shift, and go to state 47
    T_Identifier          shift, and go to state 14
    T_Minus               shift, and go to state 48
    T_Lp                  shift, and go to state 23
    T_Lc                  shift, and go to state 25
    T_Return              shift, and go to state 49
    T_If                  shift, and go to state 50
    T_While               shift, and go to state 51
    T_For                 shift, and go to state 52
    T_Break               shift, and go to state 53
    T_Continue            shift, and go to state 54

    CompSt            go to state 55
    Stmt              go to state 140
    Exp               go to state 58
    INT               go to state 59
    SCENTIFIC_NUMBER  go to state 60
    OCTAL             go to state 61
    HEXA              go to state 62
    BINARY            go to state 63
    FLOAT             go to state 64
    ID                go to state 65
    MINUS             go to state 66
    LP                go to state 67
    LC                go to state 27
    RETURN            go to state 68
    IF                go to state 69
    WHILE             go to state 70
    FOR               go to state 71
    BREAK             go to state 72
    CONTINUE          go to state 73


State 138

   25 Stmt: FOR LP Exp_Stmt Exp_Stmt RP Stmt .

    $default  reduce using rule 25 (Stmt)


State 139

   23 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 23 (Stmt)


State 140

   26 Stmt: FOR LP Exp_Stmt Exp_Stmt Exp RP Stmt .

    $default  reduce using rule 26 (Stmt)
